% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto_cmpt_freq.R
\name{auto_cmpt_freq}
\alias{auto_cmpt_freq}
\title{Bayesian Gaussian Process regression with Stan: automatically computation of
frequency by MCMC.}
\usage{
auto_cmpt_freq(data, M = as.integer(50), delta = 1/25, max_rho = 10,
  ex_sigma = 3, stan_seed = as.integer(1234),
  stan_chains = as.integer(3), stan_warmup = as.integer(300),
  stan_thin = as.integer(1), stan_iter = as.integer(1300),
  stan_max_treedepth = as.integer(10))
}
\arguments{
\item{data}{a vector of one dimentional data.}

\item{M}{integer; degree of discretization computation. x axis of
frequency plot is divided into M grids.
 Defaults to \code{M = 50}, and larger M give accurate frequency plot,
  but the computation takes much time.}

\item{delta}{numeric beetween 0 and 1 (defaults to 1/25); the size of
no-data area in frequency plot.
 In order to stabilize computation, both ends of the graph have no data
points. The size is expressed by \code{delta} times size of plot area
 in the x-axis direction.}

\item{max_rho}{numeric > 1; See \strong{Description}}

\item{ex_sigma}{expected value of sigma > 0; See \strong{Description}}

\item{stan_seed}{see \code{?stan} in \code{library(rstan)}}

\item{stan_chains}{see \code{?stan} in \code{library(rstan)}}

\item{stan_warmup}{see \code{?stan} in \code{library(rstan)}}

\item{stan_thin}{see \code{?stan} in \code{library(rstan)}}

\item{stan_iter}{see \code{?stan} in \code{library(rstan)}}

\item{stan_max_treedepth}{see \code{?stan} in \code{library(rstan)}}
}
\value{
list data having follow 5 components:
\itemize{
 \item{\code{$WAIC}: See \strong{Description} in in \code{\link{cmpt_freq}}}
 \item{\code{$p}: data.frame of the MCMC result. \code{$age_X} is x
 coodinates and \code{$p_mean} is estimate. \code{$p_0025} means that
 the probability that ture frequency is smaller than \code{$p_0025}
 is 0.025. \code{$p_025}, \code{$p_075} and \code{$p_0975} is defined
 in the same way as \code{$p_0025}. \code{$p_n_eff} and \code{$p_Rhat} is
 index to check convergence. In this function, if \code{$p_Rhat > 1.1}, then regard the MCMC to converge}
 \item{\code{$data}: same as the input data, used in \code{\link{freq_graph}}}
 \item{\code{$rho}: same as the input rho}
 \item{\code{$sigma}: same as the input sigma}
}
}
\description{
WAIC is determined by rho, sigma, data and M. So, we can
explicitly show WAIC = WAIC(rho,sigam,data,M). If M and data is fixed, WAIC
is the function only having rho and sigma as variables. The algorithm for
finding the minimum value of WAIC is as follows.
for(rho in 1:rho_max); if(WAIC(rho+1,ex_sigma) is larger than WAIC(rho,ex_sigma));
then return \code{cmpt_freq(data,rho,ex_sigma)} The details are ######
}
\examples{
d <- Osayama
e <- auto_cmpt_freq(d)
freq_graph(e)
}
